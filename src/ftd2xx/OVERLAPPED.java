package ftd2xx;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Union;
/**
 * <i>native declaration : lib\ftd2xx\ftd2xx.helper.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("ftd2xx") 
public abstract class OVERLAPPED extends StructObject {
	static {
		BridJ.register();
	}
	/** Conversion Error : ULONG_PTR (failed to convert type to Java (undefined type)) */
	/** Conversion Error : ULONG_PTR (failed to convert type to Java (undefined type)) */
	/** C type : Field1Union */
	@Field(2) 
	public OVERLAPPED.Field1Union field1() {
		return this.io.getNativeObjectField(this, 2);
	}
	/** C type : Field1Union */
	@Field(2) 
	public OVERLAPPED field1(OVERLAPPED.Field1Union field1) {
		this.io.setNativeObjectField(this, 2, field1);
		return this;
	}
	/** C type : HANDLE */
	@Field(3) 
	public Pointer<? > hEvent() {
		return this.io.getPointerField(this, 3);
	}
	/** C type : HANDLE */
	@Field(3) 
	public OVERLAPPED hEvent(Pointer<? > hEvent) {
		this.io.setPointerField(this, 3, hEvent);
		return this;
	}
	/** <i>native declaration : lib\ftd2xx\ftd2xx.helper.h:35</i> */
	@Union 
	public static class Field1Union extends StructObject {
		static {
			BridJ.register();
		}
		/** C type : Field1Struct */
		@Field(0) 
		public OVERLAPPED.Field1Union.Field1Struct field1() {
			return this.io.getNativeObjectField(this, 0);
		}
		/** C type : Field1Struct */
		@Field(0) 
		public Field1Union field1(OVERLAPPED.Field1Union.Field1Struct field1) {
			this.io.setNativeObjectField(this, 0, field1);
			return this;
		}
		/** C type : PVOID */
		@Field(1) 
		public Pointer<? > Pointer() {
			return this.io.getPointerField(this, 1);
		}
		/** C type : PVOID */
		@Field(1) 
		public Field1Union Pointer(Pointer<? > Pointer) {
			this.io.setPointerField(this, 1, Pointer);
			return this;
		}
		/** <i>native declaration : lib\ftd2xx\ftd2xx.helper.h:36</i> */
		public static class Field1Struct extends StructObject {
			static {
				BridJ.register();
			}
			@Field(0) 
			public int Offset() {
				return this.io.getIntField(this, 0);
			}
			@Field(0) 
			public Field1Struct Offset(int Offset) {
				this.io.setIntField(this, 0, Offset);
				return this;
			}
			@Field(1) 
			public int OffsetHigh() {
				return this.io.getIntField(this, 1);
			}
			@Field(1) 
			public Field1Struct OffsetHigh(int OffsetHigh) {
				this.io.setIntField(this, 1, OffsetHigh);
				return this;
			}
			public Field1Struct() {
				super();
			}
			public Field1Struct(Pointer pointer) {
				super(pointer);
			}
		};
		public Field1Union() {
			super();
		}
		public Field1Union(Pointer pointer) {
			super(pointer);
		}
	};
}
